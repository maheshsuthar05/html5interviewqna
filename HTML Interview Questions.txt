Q1. What are the main goals of HTML5?


* Better semantic support for the web page structure with the introduction of new structural element tags like <aside>, <header>, <main>, and <section>
* Extensions for the JavaScript API, such as for caching, drag-and-drop, geolocation, and local storage
* New form elements like url, date, range, time, color, <calendar>, <email>, <search>, and <url>
* Offer interactive and rich content, such as videos and animation, without dependency on plugins
* Adding new parsing rules to enhance flexibility.
* Allow offline editing, Protocol and MIME handler registration
* Support (Web SQL), – A common standard for storing data in SQL databases.
Q2. What is the main difference between HTML and HTML5?


* Attributes of Async, charset, and ping are available in HTML5. The same is not available in HTML.
* HTML features a long and complicated doctype declaration. The same is simple and easy in HTML5.
* While HTML5 provides support for the drag-and-drop effect, HTML has no provision for it.
* High-level audio and video support isn't a part of the HTML specifications. HTML5 offers out-of-the-box high-level audio and video support.
* HTML5 provides support for MathML, Canvas, SVG, and other virtual vector graphics. Implementing vector graphics in HTML is only possible using third-party plugins like Silverlight and VML.
* HTML doesn't provide support for running J.S. within the web browser. HTML5 allows JavaScript to run in the background using Web Workers.
* HTML is not mobile-ready. HTML5 specifications involve emphasis on mobile-friendliness.
* There is no persistent storage option available in HTML. Only browser cache is used as temporary storage. HTML5 allows permanent storage with an application cache, Web SQL database, and web storage.


Q3. What is a tag in HTML5? How many tags are required to create a website?


A tag is a special content in HTML5, which is surrounded by an angle bracket (<,>). A slash (/) symbol is used to close the tag after completing the block.An Html5 tag is a set of characters that develop a formatted command for a web page. These formatted commands communicate and send the instruction to the Browser.Tags help in sending instructions to the web browser on what to display and how to display. A minimum of 3 tags are required for creating a web page in HTML5:
* <head>
* <body>
* <html>


Q4. What are the various formatting tags in HTML5?


* <b> - Used for making the text bold.
* <big> - Used for increasing the font size of the text by one unit.
* <del> - Used to display the deleted text.
* <em> - Used for making the text italic with added semantics importance.
* <i> - Used to make the text italic.
* <ins> - Used for displaying the added text.
* <mark> - Used for highlighting the text.
* <small> - Used to decrease the font size of the text by one unit.
* <strong> - Used for telling the browser that the text is important.
* <sub> - Used for making the text a subscript.
* <sup> - Used to make the text a superscript.
* <u> - Used for underlining the text.


Q5. What is <!DOCTYPE>?


        The <!DOCTYPE> declaration provides instruction to the web browser to understand what information it should display, and the need to start with <!DOCTYPE> declaration. In HTML5, DOCTYPE declaration is very short, and case-insensitive, and <!DOCTYPE html> is written at the top of every HTML5 page.


Q6. Explain the various new tags introduced by HTML5 in Media Elements.


* <audio>: Eliminates the need for additional plugins for playing audio content like audio streams and music.
* <embed>: Embeds an external application or content
* <source>: Adds multimedia resources like audio, picture, and video.
* <track>: Adds caption files or subtitles while the multimedia file is playing.
* <video>: Adds video content like embedded video content, movie clips, and videos.


Q7. What is <meta> tag in HTML5?
* The <meta> tag defines metadata about an HTML document. Metadata is data (information) about data.
* <meta> tags always go inside the <head> element, and are typically used to specify character set, page description, keywords, author of the document, and viewport settings.
* Metadata will not be displayed on the page, but is machine parsable.
* Metadata is used by browsers (how to display content or reload page), search engines (keywords), and other web services.
* There is a method to let web designers take control over the viewport (the user's visible area of a web page), through the <meta> tag (See "Setting The Viewport" example below).


Q8. What are all the tags removed in HTML5?


<acronym> <applet> <basefont> <big> <bigcenter> <center> <dir> <frame> <frameset> <font> <noframes> <strike> <tt>


Q9. What are the new form input types in HTML5?


        HTML5 has introduced 14 new input form types such as Date, Time, Week, Month, Datetime, Datetime-local, Email, Tel, Search, Number, Url, Color, Range & Placeholder.


Q10. What is an image map in HTML5?


        Image maps are a combination of URL and images, where clicking on these images (clickable area of the image) will open different new web pages.
Two types of image maps are available in HTML5, i.e. client side and server side:
* The client-side image map is created by using two elements <area> and <map>, where the map holds the map information and the area element takes the attributes to define each section of the map. 
* Server-side image map created by using <usemap> attribute, the usemap attribute is the name of our map.
Q11. How do you write a copyright symbol on a web browser page?


In order to write a copyright symbol, we need to type &copy; or &#169; in an HTML5 file.


Q12. What is the use of charset UTF-8?
UTF-8 is Universal Character set Transformation Format as 8 bit encoding, when we declares the "charset" as "UTF-8", we are telling our browser to use the UTF-8 character encoding, which is a method of converting your typed characters into machine-readable code. It is declared in the meta tag under the head tag.


Q13. Is it possible for a web page to have multiple <header> and <footer> elements?
Yes, a web page can have many <header> and <footer> elements. Both tags are specifically designed to serve their respective purposes with respect to their parent section.
Hence, not only the page <body> must have the <header> and <footer> tags, but also does every <article> and <section> elements. Although a <footer> element might not be always necessary for every <article> and <section> tags, a <header> element must always be there.


Q14. Write HTML5 code to implement a <video> tag for embedding a video. The video must have a width of 640 pixels and a height of 360 pixels. Also, provide the user with controls.
<video src = ”url” width = ”640” height = “360” controls></video>
or
<video width = “640” height = ”360” controls> <source src = “url”> </video>
Q15. Please explain whether an <article> element can have <section> elements and vice-versa.
Yes, an <article> element can have <section> element(s) and a <section> element can also have <article> elements. For example, a user panel for a website can have multiple <section> elements, intended for blog, analytics, payment options, news, et cetera.
Now, the <section> element for the blog can have multiple <article> elements to accommodate various articles. Further, each of these <article> elements can have two <section> elements, one for the comments section and the other for sharing section.


Q16. What is the concept of web storage in HTML5?
Web storage provides the facility to store the data of our web applications locally into the user’s browser. It can store up to 10 MB data. Web storage helps to increase the performance of our applications.
There are two types of web storage that are used to store data locally in HTML5:
* Local storage: This stores the data that will not expire or clear automatically when a user closes or reopens a browser.
* Session Storage: This stores data for one session only(i.e, a user who is surfing the internet or website). Once the browser is closed, session data will automatically delete from the web browser.
Q17. How to create a link that will connect to another web browser page when clicked in HTML5?
Use the <href> tag to create hyperlinks, and these are used to connect to another web page. We can create hyperlink by using type = <a href = “ url of website”> text</a> tag. When we click the text then, the linked URL of the web page will open.
Eg,         <a href = “https:www.gmail.com”> Visit Gmail </a>
Q18. What are the useful API in HTML5?
* Fetch: Fetch has made Http requests easier than it was with XMLHttpRequest.
* Battery status: checks the battery status of the device.
* Geolocation: tells the device location.
* Clipboard: copy the contents to the clipboard.
* Forms: new types have been added for validation and rendering.
* Drag and drop: easily drag and drop items in the app.
* Screen orientation: Checks the device’s screen orientation.
* Web audio: Process audio on the client-side.
* Internalization: International formatting and string comparison.
* Web sockets: real-time communication between server and client.


Q19. Explain the difference between div and span.
Both div and span are used for giving out the output. While span gives the output with display: inline, div gives output with display: block. Typically, span is used when there is the need to display the elements one after the other, i.e., in a line.


Q20. What are the most popular audio and video formats for embedding on an HTML5 web page?
Popular audio formats:
MP3, Ogg Vorbis, WAV, WebM
Popular video formats:
MP4,Ogg, WebM




Q21. What are the parts of HTML5 Technologies?
* Web Workers
* Web Storage
* SVG
* CSS3
* Server-Sent Events(SSE)
* Microdata
* Web Intents
* Web Sockets
* Offline Application
* Geolocation
* File API
* Web Messaging
* Drag and Drop
* Canvas 2D
Q22. Briefly explain various page structure elements in HTML5.
* <article> - Represents a set of information on a web page
* <aside> - Represents the sidebar of a web page
* <footer> - Represents the footer section of a web page
* <header> - Represents the header section of a web page
* <nav> - Represents the navigational elements of a web page
* <section> - Represents the set of instructions used inside an article block for defining the basic structure of a web page
Q23. What are some disadvantages of HTML5?
* Only modern versions of the browsers support HTML5. Not all users use the latest version of browsers.
* Many features are still not stable and are in the development stage.
* Due to licensing issues, the rich media is compressed into multiple formats to be compatible with most browsers.
Q24. What is Web worker in HTML?
* When executing scripts in an HTML page, the page becomes unresponsive until the script is finished.
* A web worker is a JavaScript that runs in the background, independently of other scripts, without affecting the performance of the page. You can continue to do whatever you want: clicking, selecting things, etc., while the web worker runs in the background.
* A worker is an object created using a constructor (e.g. Worker()) that runs a named JavaScript file — this file contains the code that will run in the worker thread, we can run whatever code we like inside the worker thread.


Q25. What is a ‘Marquee’ Tag in HTML?
* You can put scrolling text with a Marquee tag. With the help of this tag, an image or text can be scrolled up, down, left, or right.
* The text which is scrolled is defined within the <marquee>……</marquee> tag.
Q26. What is Geolocation API in HTML5?
* HTML5’s Geolocation API lets users share their physical location with chosen web sites. JavaScript can capture a user’s latitude and longitude and can send it to the back-end web server to enable location-aware features like finding local businesses or showing their location on a map.
* Today, most browsers and mobile devices support the Geolocation API. The Geolocation API works with a new property of the global navigator object.
* A Geolocation object can be created as follows:
   * var geolocation = navigator.geolocation;
* The geolocation object is a service object that allows widgets to retrieve information about the geographic location of the user’s device.We can find out the current position of the user using getCurrentPosition() method of this API.
Q27. What is the difference between SVG and canvas?
* The <svg> element is a container for SVG graphics. SVG has several methods for drawing paths, boxes, circles, text, and even bitmap images.
* SVG is a language for describing 2D graphics, but <canvas> allows you to draw 2D graphics on the fly using JavaScript.
* SVG is XML-based, which means that every element is available within the SVG DOM. You can attach JavaScript event handlers for an element.
* In SVG, each drawn shape is remembered as an object. If attributes of an SVG object are changed, the browser can automatically re-render the shape.
* Canvas is rendered pixel by pixel. In canvas, once the graphic is drawn, it is forgotten by the browser. If its position should be changed, the entire scene needs to be redrawn, including any objects that might have been covered by the graphic.


Q28. What would happen if the HTML Document does not contain <!DOCTYPE>?
* It instructs the Web Browser about the version of HTML used for creating the Web page.
* If the developer misses declaring the DOCTYPE information in the code, then new features and tags provided by HTML5, like <article>, <footer>, and <header> will not be supported. Additionally, the Browser may automatically go into Quirks or Strict Mode.


Q29. What is the difference between a block-level element and an inline element?
* A block-level element is drawn as a block that stretches to fill the full width available to it i.e, the width of its container and will always start on a new line.
   * Examples: <div>, <img>, <section>, <form>, <nav>.
* Inline elements are drawn where they are defined and only take up space that is absolutely needed. The easiest way to understand how they work is to look at how text flows on a page.
   * Examples: <span>, <b>, <strong>, <a>, <input>.


Q30. How to create a nested webpage in HTML?
The HTML iframe tag is used to display a nested webpage. In other words, it represents a webpage within a webpage. The HTML <iframe> tag defines an inline frame. For example:
<!DOCTYPE html>
<html>
<body>
<h2>HTML example</h2>
<iframe src="<a href="https://www.edureka.co/">https://www.edureka.co/</a>" height="300" width="400"></iframe>
</body>
</html>